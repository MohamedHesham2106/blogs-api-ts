{"version":3,"sources":["../../../src/controllers/auth.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\nimport { AuthService } from '@services/auth.service';\nimport { CreateUserDto, AuthUserDto } from '@dtos/users.dto';\nimport { plainToInstance } from 'class-transformer';\nimport { validate } from 'class-validator';\n\nexport class AuthController {\n  private readonly authService = Container.get(AuthService);\n\n  public signUp = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData = plainToInstance(CreateUserDto, req.body);\n      const validationErrors = await validate(userData);\n\n      if (validationErrors.length > 0) {\n        res.status(422).json({ errors: validationErrors });\n        return;\n      }\n\n      const signUpUserData = await this.authService.signUp(userData);\n\n      res.status(201).json({ data: { signUpUserData }, message: 'signup successful' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public signIn = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData = plainToInstance(AuthUserDto, req.body);\n      const validationErrors = await validate(userData);\n\n      if (validationErrors.length > 0) {\n        res.status(422).json({ errors: validationErrors });\n        return;\n      }\n\n      const { accessToken } = await this.authService.signIn(userData);\n\n      res.status(200).json({ data: { accessToken }, message: 'login successful' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["AuthController","authService","Container","get","AuthService","signUp","req","res","next","userData","plainToInstance","CreateUserDto","body","validationErrors","validate","length","status","json","errors","signUpUserData","data","message","error","signIn","AuthUserDto","accessToken"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBANa;6BACE;0BACe;kCACX;gCACP;;;;;;;;;;;;;;AAElB,IAAA,AAAMA,iBAAN,MAAMA;;QACX,uBAAiBC,eAAcC,iBAAS,CAACC,GAAG,CAACC,wBAAW;QAExD,uBAAOC,UAAS,OAAOC,KAAcC,KAAeC;YAClD,IAAI;gBACF,MAAMC,WAAWC,IAAAA,iCAAe,EAACC,uBAAa,EAAEL,IAAIM,IAAI;gBACxD,MAAMC,mBAAmB,MAAMC,IAAAA,wBAAQ,EAACL;gBAExC,IAAII,iBAAiBE,MAAM,GAAG,GAAG;oBAC/BR,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;wBAAEC,QAAQL;oBAAiB;oBAChD;gBACF;gBAEA,MAAMM,iBAAiB,MAAM,IAAI,CAAClB,WAAW,CAACI,MAAM,CAACI;gBAErDF,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEG,MAAM;wBAAED;oBAAe;oBAAGE,SAAS;gBAAoB;YAChF,EAAE,OAAOC,OAAO;gBACdd,KAAKc;YACP;QACF;QAEA,uBAAOC,UAAS,OAAOjB,KAAcC,KAAeC;YAClD,IAAI;gBACF,MAAMC,WAAWC,IAAAA,iCAAe,EAACc,qBAAW,EAAElB,IAAIM,IAAI;gBACtD,MAAMC,mBAAmB,MAAMC,IAAAA,wBAAQ,EAACL;gBAExC,IAAII,iBAAiBE,MAAM,GAAG,GAAG;oBAC/BR,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;wBAAEC,QAAQL;oBAAiB;oBAChD;gBACF;gBAEA,MAAM,EAAEY,WAAW,EAAE,GAAG,MAAM,IAAI,CAACxB,WAAW,CAACsB,MAAM,CAACd;gBAEtDF,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEG,MAAM;wBAAEK;oBAAY;oBAAGJ,SAAS;gBAAmB;YAC5E,EAAE,OAAOC,OAAO;gBACdd,KAAKc;YACP;QACF;;AACF"}