{"version":3,"sources":["../../../src/controllers/blog.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\nimport { BlogService } from '@/services/blog.service';\nimport { HttpException } from '@/exceptions/HttpException';\nimport { plainToInstance } from 'class-transformer';\nimport { CreateBlogDto } from '@/dtos/blogs.dto';\nimport { validate } from 'class-validator';\n\nexport class BlogController {\n  private readonly blogService = Container.get(BlogService);\n\n  public getAllBlogs = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { page = 1, limit = 10 } = req.query;\n      const { blogs, total } = await this.blogService.getAllBlogs({\n        page: Number(page),\n        limit: Number(limit),\n      });\n\n      res.status(200).json({\n        data: blogs,\n        meta: {\n          total,\n          page: Number(page),\n          limit: Number(limit),\n          pages: Math.ceil(total / Number(limit)),\n        },\n        message: 'Blogs retrieved successfully',\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getBlogById = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { id } = req.params;\n\n      if (!id) throw new HttpException(400, 'Blog ID is required');\n\n      const blog = await this.blogService.getBlogById(id);\n\n      if (!blog) throw new HttpException(404, 'Blog not found');\n\n      res.status(200).json({\n        data: blog,\n        message: 'Blog retrieved successfully',\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n  public createBlog = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const blogData = plainToInstance(CreateBlogDto, req.body);\n      const validationErrors = await validate(blogData);\n      if (validationErrors.length > 0) {\n        res.status(422).json({ errors: validationErrors });\n        return;\n      }\n      const createdBlog = await this.blogService.createBlog(blogData);\n      res.status(201).json({\n        data: {\n          blog: createdBlog,\n        },\n        message: 'blog creation success',\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["BlogController","blogService","Container","get","BlogService","getAllBlogs","req","res","next","page","limit","query","blogs","total","Number","status","json","data","meta","pages","Math","ceil","message","error","getBlogById","id","params","HttpException","blog","createBlog","blogData","plainToInstance","CreateBlogDto","body","validationErrors","validate","length","errors","createdBlog"],"mappings":";;;;+BAQaA;;;eAAAA;;;wBAPa;6BACE;+BACE;kCACE;0BACF;gCACL;;;;;;;;;;;;;;AAElB,IAAA,AAAMA,iBAAN,MAAMA;;QACX,uBAAiBC,eAAcC,iBAAS,CAACC,GAAG,CAACC,wBAAW;QAExD,uBAAOC,eAAc,OAAOC,KAAcC,KAAeC;YACvD,IAAI;gBACF,MAAM,EAAEC,OAAO,CAAC,EAAEC,QAAQ,EAAE,EAAE,GAAGJ,IAAIK,KAAK;gBAC1C,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE,GAAG,MAAM,IAAI,CAACZ,WAAW,CAACI,WAAW,CAAC;oBAC1DI,MAAMK,OAAOL;oBACbC,OAAOI,OAAOJ;gBAChB;gBAEAH,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,MAAML;oBACNM,MAAM;wBACJL;wBACAJ,MAAMK,OAAOL;wBACbC,OAAOI,OAAOJ;wBACdS,OAAOC,KAAKC,IAAI,CAACR,QAAQC,OAAOJ;oBAClC;oBACAY,SAAS;gBACX;YACF,EAAE,OAAOC,OAAO;gBACdf,KAAKe;YACP;QACF;QAEA,uBAAOC,eAAc,OAAOlB,KAAcC,KAAeC;YACvD,IAAI;gBACF,MAAM,EAAEiB,EAAE,EAAE,GAAGnB,IAAIoB,MAAM;gBAEzB,IAAI,CAACD,IAAI,MAAM,IAAIE,4BAAa,CAAC,KAAK;gBAEtC,MAAMC,OAAO,MAAM,IAAI,CAAC3B,WAAW,CAACuB,WAAW,CAACC;gBAEhD,IAAI,CAACG,MAAM,MAAM,IAAID,4BAAa,CAAC,KAAK;gBAExCpB,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,MAAMW;oBACNN,SAAS;gBACX;YACF,EAAE,OAAOC,OAAO;gBACdf,KAAKe;YACP;QACF;QACA,uBAAOM,cAAa,OAAOvB,KAAcC,KAAeC;YACtD,IAAI;gBACF,MAAMsB,WAAWC,IAAAA,iCAAe,EAACC,uBAAa,EAAE1B,IAAI2B,IAAI;gBACxD,MAAMC,mBAAmB,MAAMC,IAAAA,wBAAQ,EAACL;gBACxC,IAAII,iBAAiBE,MAAM,GAAG,GAAG;oBAC/B7B,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;wBAAEqB,QAAQH;oBAAiB;oBAChD;gBACF;gBACA,MAAMI,cAAc,MAAM,IAAI,CAACrC,WAAW,CAAC4B,UAAU,CAACC;gBACtDvB,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,MAAM;wBACJW,MAAMU;oBACR;oBACAhB,SAAS;gBACX;YACF,EAAE,OAAOC,OAAO;gBACdf,KAAKe;YACP;QACF;;AACF"}